<?php
if(!defined('BASEPATH')) exit('No se permite el acceso directo al script');
class mod_crm extends CI_Model{

	function __construct(){
		$us = $this->usuarios->usuario_completo();
		$this->vendedor = $us;
	}


	function mi_cartera(){
		$usuario = $this->usuarios->usuario_completo();
		$this->db->select('CC.*, cg.fecha fecha_gestion, cg.idgestion, cgt.descripcion gestion, cgt.label');
		$this->db->from('core_clientes_sep CC');
		$this->db->join('core_clientes_asignaciones CCA', 'CC.RBD = CCA.idrbd');
		$this->db->join('core_cliente_gestion cg', 'CC.ULTIMA_GESTION = cg.id', 'left');
		$this->db->join('core_gesitones_tipo cgt', 'cg.idgestion = cgt.id', 'left');
		$this->db->where('CCA.idusuario', $usuario['ID']);
		$query = $this->db->get();
		$row = $query->result_array();
		$data = array();
		foreach($row as $r){
			array_push($data, array("colegio"=>$r, "gestion"=>$this->ultima_gestion($r)));
		}
		return $data;
	}

	function buscar_colegio($obj){
		$usuario = $this->usuarios->usuario_completo();
		$colegio = is_int($obj['colegio']);
		$this->db->select('CC.*, cg.fecha fecha_gestion, cg.idgestion, cgt.descripcion gestion, cgt.label');
		$this->db->from('core_clientes_sep CC');
		if($colegio){
			$this->db->where('CC.RBD', $obj['colegio']);
		}else{
			$this->db->like('CC.NOMBRE', $obj['colegio']);
		}
		//$this->db->join('core_clientes_asignaciones CCA', 'CC.RBD = CCA.idrbd');
		$this->db->join('core_cliente_gestion cg', 'CC.ULTIMA_GESTION = cg.id', 'left');
		$this->db->join('core_gesitones_tipo cgt', 'cg.idgestion = cgt.id', 'left');
		$query = $this->db->get();
		$row = $query->result_array();
		$data = array();
		foreach($row as $r){
			array_push($data, array("colegio"=>$r, "gestion"=>$this->ultima_gestion($r)));
		}
		return $data;
	}

	function ultima_gestion($obj){
		$this->db->where('rbd', $obj['RBD']);
		$this->db->order_by('id desc');
		$this->db->limit(1);
		$query = $this->db->get('core_cliente_gestion');
		return $query->result_array();
	}

	function ficha($obj){
		$this->db->select('ccs.*, cc.COD_AREA, cc.AUX2 DIRECTOR');
		$this->db->where('ccs.RBD', $obj['rbd']);
		$this->db->from('core_clientes_sep ccs');
		$this->db->join('core_clientes cc', 'cc.RBD = ccs.RBD', 'left');
		$query = $this->db->get();
		$row = $query->result_array();
		$data = array();

		foreach($row as $r){
			array_push($data, array("resumen"=>$r, "gestiones"=>$this->gestiones($r),
								"cotizaciones"=>$this->cotizaciones($r), "contactos"=>$this->contactos($r),
								"gestiones"=>$this->traer_gestiones($r)));
		}
		return $data;
	}

	function gestiones($obj){
		
	}

	function cotizaciones($obj){

		$this->db->select('cg.id, cg.contacto, cd.idproducto, ccp.nombre nombre_producto, ccp.precio');
		$this->db->where('cg.rbd', $obj['RBD']);
		$this->db->from('cotizacion_detalle cd');
		$this->db->join('cotizacion_general cg','cd.idcotizacion = cg.id');
		$this->db->join('core_categorias_productos ccp', 'cd.idproducto = ccp.id');
		$query = $this->db->get();
		return $query->result_array();

	}

	function contactos($obj){
		$this->db->where('RBD', $obj['RBD']);
		$this->db->from('core_cliente_contacto');
		$query = $this->db->get();
		return $query->result_array();
	}

	function proyectos_categorias(){
		$this->db->where('parent', 0);
		$query = $this->db->get('core_categorias_productos');
		$row = $query->result_array();
		$data = array();
		foreach($row as $cat){
			array_push($data, array("categoria"=>$cat, "productos"=>$this->traer_productos($cat)));
		}
		return $data;
	}

	function traer_productos($obj){
		$this->db->where('parent', $obj['id']);
		$query = $this->db->get('core_categorias_productos');
		return $query->result_array();
	}

	function gestiones_tipo(){
		$us = $this->usuarios->usuario_completo();
		$this->db->where('idperfil', $us['IDPERFIL']);
		$query = $this->db->get('core_gesitones_tipo');
		return $query->result_array();
	}

	function crear_gestion($obj){
		$datos = array(
				"idvendedor"=>$this->vendedor['ID'],
				"idcamp"=>1,
				"rbd"=>$obj['rbd'],
				"responsable"=>$obj['responsable'],
				"idgestion"=>$obj['gestion'],
				"observaciones"=>$obj['observaciones'],
				"fecha_agendamiento"=>$obj['fecha_agenda'],
				"hora_agendamiento"=>$obj['hora_agenda'],
				"idproducto"=>$obj['producto']
				);

		if($this->db->insert('core_cliente_gestion', $datos)){
			$id = $this->db->insert_id();
			//marcar interes del prospecto
			$total_interes = count($obj['interes']);
			if($total_interes>0)
			{

				foreach($obj['interes'] as $int){
					$interes = array("rbd"=>$obj['rbd'], "proyecto"=>$int, "idgestion"=>$id);
					$this->db->insert('core_cliente_interes', $interes);
				}

			}

			$this->db->where('RBD', $obj['rbd']);
			$this->db->update('core_clientes_sep', array("ULTIMA_GESTION"=>$id));

			return $id;
		}else{
			return 0;
		}
	}

	function traer_gestiones($obj){

		$rbd = $obj['RBD'];
		$this->db->select('cu.LOGIN vendedor, gt.descripcion gestion, g.*');
		$this->db->where('g.rbd', $rbd);
		$this->db->from('core_cliente_gestion g');
		$this->db->join('core_gesitones_tipo gt', 'gt.id = g.idgestion', 'left');
		$this->db->join('core_usuarios cu', 'g.idvendedor = cu.ID', 'left');
		//$this->db->limit(9);
		$this->db->order_by('g.fecha DESC');
		$query = $this->db->get();
		return $query->result_array();

	}

	function mis_pendientes($obj){

		$hoy = date("d");
		$hoy = (int)$hoy;
		$fechas = array();

		for($i=0;$i<5;$i++)
		{
			array_push($fechas, $hoy);
			$hoy++;
		}

		$fechas;
		$pendientes = array();
		$us = $this->usuarios->usuario_completo();

		foreach($fechas as $dia){
			$dia_inicio = date("Y").'-'.date("m").'-'.$dia.' 00:00:01';
			$dia_fin = date("Y").'-'.date("m").'-'.$dia.' 23:59:59';
			$vendedor = $us['ID'];

			//nombre del dia de la semana
			$fecha = $dia.'-'.date("m").'-'.date("Y"); //5 agosto de 2004 por ejemplo  
			$fechats = strtotime($fecha); //a timestamp 
			//el parametro w en la funcion date indica que queremos el dia de la semana 
			//lo devuelve en numero 0 domingo, 1 lunes,.... 
			switch (date('w', $fechats)){ 
			    case 0: $nombre_dia = "Domingo"; break; 
			    case 1: $nombre_dia = "Lunes"; break; 
			    case 2: $nombre_dia = "Martes"; break; 
			    case 3: $nombre_dia = "Miercoles"; break; 
			    case 4: $nombre_dia = "Jueves"; break; 
			    case 5: $nombre_dia = "Viernes"; break; 
			    case 6: $nombre_dia = "Sabado"; break; 
			}  
			//
			$eventos = $this->traer_eventos($dia, $dia_inicio, $dia_fin, $vendedor);
			array_push($pendientes, array("dia"=>$dia, "eventos"=>$eventos, "fecha_dia"=>$fecha, "nombre_dia"=>$nombre_dia));
		}

		return $pendientes;
	}

	function traer_eventos($dia,$inicio, $termino, $vendedor){

		$this->db->select('ccg.rbd, cgt.label, ccs.nombre, ccg.fecha_agendamiento fecha, ccg.hora_agendamiento hora, cgt.descripcion gestion, ccg.observaciones');
		$this->db->where('ccg.idvendedor', $vendedor);
		$this->db->where('ccg.fecha_agendamiento', date("Y").'-'.date("m").'-'.$dia);
		$this->db->order_by('ccg.hora_agendamiento');
		$this->db->from('core_cliente_gestion ccg');
		$this->db->join('core_gesitones_tipo cgt', 'ccg.idgestion = cgt.id', 'left');
		$this->db->join('core_clientes_sep ccs', 'ccg.rbd = ccs.RBD', 'left');
		$query = $this->db->get();
		return $query->result_array();
	}

	function misgestiones(){
		$us = $this->usuarios->usuario_completo();
		$this->db->where('idperfil', $us['IDPERFIL']);
		$query = $this->db->get('core_gesitones_tipo');
		$row = $query->result_array();
		$data = array();
			foreach($row as $gestion){
				array_push($data, array("gestion"=>$gestion, "resumen"=>$this->traer_gestiones_reporte($gestion['id'], $us['ID'])));
			}
		return $data;
	}

	function traer_gestiones_reporte($gestion, $vendedor){
		$this->db->select('ccg.rbd, ccs.nombre colegio, ccg.fecha_agendamiento fecha');
		$this->db->where('ccg.fecha_agendamiento BETWEEN "'.date("Y").'-'.date("m").'-1" AND "'.date("Y").'-'.date("m").'-31"');
		$this->db->where('ccg.idvendedor', $vendedor);
		$this->db->where('ccg.idgestion', $gestion);
		$this->db->from('core_cliente_gestion ccg');
		$this->db->join('core_clientes_sep ccs', 'ccg.rbd = ccs.RBD');
		$query = $this->db->get();
		return $query->result_array();
	}

	function agregar_usuario_colegio($obj){
		$datos = array("RBD"=>$obj['rbd'], "NOMBRE"=>$obj['nombre'],
				"CARGO"=>$obj['cargo'], "EMAIL"=>$obj['email'], 
				"TELEFONO"=>$obj['telefono']);

		return $this->db->insert('core_cliente_contacto', $datos);
	}

	//segmentacion de mercado
	
	function traer_regiones(){
		$this->db->order_by('ID_REGION');
		$regiones = $this->db->get('vista_colegios_regiones');
		$row_regiones = $regiones->result_array();
		$data = array();
		foreach($row_regiones as $region){
			array_push($data, array("region"=>$region,"detalle_dependencia_region"=>$this->dependencia_region($region), "detalle"=>$this->detalle_region($region)));
		}
		return $data;
	}

	function dependencia_region($region){
		$dependencia = $this->db->get('core_dependencias');
		$row_dependencia = $dependencia->result_array();
		$data = array();
		foreach($row_dependencia as $rd){
			
		}
	}

	function detalle_region($obj){

		$this->db->where('ID_REGION', $obj['ID_REGION']);
		$comunas = $this->db->get('vista_colegios_comunas');
		$row_comunas = $comunas->result_array();

		$data = array();

		foreach($row_comunas as $comuna){
			array_push($data, array("comuna"=>$comuna, "detalle_dependencia"=>$this->detalle_dependencia($comuna)));
		}

		return $data;
	}

	function detalle_dependencia($obj){

		$dependencia = $this->db->get('core_dependencias');
		$row_dependencia = $dependencia->result_array();
		$data = array();
		foreach($row_dependencia as $dep){
			$this->db->select('COUNT(RBD) COLEGIOS, SUM(ALUMNOS_SEP) ALUMNOS_SEP');
			$this->db->where('ID_REGION', $obj['ID_REGION']);
			$this->db->like('COMUNA', $obj['COMUNA']);
			$this->db->where('ID_DEPENDENCIA', $dep['id']);
			$d = $this->db->get('core_clientes_sep');
			$row_d = $d->result_array();
			if($d->num_rows()>0)
			{
				array_push($data, array("dependencia"=>$dep, "colegios"=>$row_d[0]['COLEGIOS'], "ALUMNOS"=>$row_d[0]['ALUMNOS_SEP']));
			}else{
				array_push($data, array("dependencia"=>$dep, "colegios"=>0, "ALUMNOS"=>0));
			}
		}
		return $data;
	}

	function cartera_por_gestiones(){

		$usuario = $this->usuarios->usuario_completo();
		$this->db->where('idperfil', $usuario['IDPERFIL']);
		$query = $this->db->get('core_gesitones_tipo');
		$row_gestion = $query->result_array();
		$data = array();
		foreach($row_gestion as $gestion){
			//obtener estados de cartera asignada
			$this->db->select('ccs.*, cca.idusuario');
			$this->db->where('cca.idusuario', $usuario['ID']);
			$this->db->where('ccs.idgestion', $gestion['id']);
			$this->db->from('vista_cliente_gestiones ccs');
			$this->db->join('core_clientes_asignaciones cca', 'ccs.RBD = cca.idrbd');
			$query_gestion = $this->db->get();
			$row = $query_gestion->result_array();

			array_push($data, array("gestion"=>$gestion, "detalle"=>$row));
		}

		return $data;
	}

	function traer_cotizaciones(){
		
		$usuario = $this->usuarios->usuario_completo();
		$this->db->where('cg.idvendedor', $usuario['ID']);
		$this->db->select('cg.id, cg.fecha, cg.colegio, cg.contacto, cg.rbd, ccs.ALUMNOS_SEP alumnos_sep, cg.neto, cg.porcentaje_cierre, cg.estado');
		$this->db->from('cotizacion_general cg');
		$this->db->join('core_clientes_sep ccs', 'cg.rbd = ccs.RBD');
		$query = $this->db->get();
		$row = $query->result_array();
		return $row;

	}

	function traer_personal(){
		$this->db->select('ID, NOM_EJECUTIVO');
		$query = $this->db->get('core_usuarios');
		return $query->result_array();
	}

	function actualizar_colegio($obj){

		$datos_sep = array("NOMBRE"=>$obj['nombre'],
			"MATRICULA"=>$obj['matricula'],
			"RUT"=>$obj['rut'],
			"SOSTENEDOR"=>$obj['sostenedor'],
			"ALUMNOS_SEP"=>$obj['sep'],
			"TELEFONO"=>$obj['telefono'],
			"DIRECTOR"=>$obj['director'],
			"DIRECCION"=>$obj['direccion']
			);
		$datos_general = array("NOMBRES"=>$obj['nombre'],
			"MONTO_SEP"=>$obj['matricula'],
			"RUT_SOSTENEDOR"=>$obj['rut'],
			"RUT"=>$obj['rut'],
			"SOSTENEDOR"=>$obj['sostenedor'],
			"ALUM_SEP"=>$obj['sep'],
			"TELEFONO"=>$obj['telefono'],
			"AUX2"=>$obj['director'],
			"CALLE"=>$obj['direccion']);

		$this->db->where('RBD', $obj['rbd']);
		$this->db->update('core_clientes', $datos_general);
		$this->db->where('RBD', $obj['rbd']);
		if($this->db->update('core_clientes_sep', $datos_sep)){
			return true;
		}else{
			return false;
		}
	}

	/**reportes por ejecutivos**/
	function reporte_ejecutivos($obj){

		//s$this->db->where('idperfil', $obj['clave']);
		$gestiones = $this->db->get('core_gesitones_tipo');
		$row_gestiones = $gestiones->result_array();

		$vendedor = $this->db->get('core_usuarios');
		$row_vendendedor = $vendedor->result_array();
		
		$gestiones_vendedores = array();

		foreach($row_vendendedor as $rv){

			$detalle_gestion = array();
			

			$this->db->where('idusuario', $rv['ID']);
			$g = $this->db->get('core_clientes_asignaciones');
			$row_gestiones = $g->result_arary();

			foreach($row_gestiones as $rg){
				$this->db->where('ccs.idvendedor', $rv['ID']);
				$this->db->where('ccs.idgestion', $rg['id']);
				$detalle_g = $this->db->get('vista_cliente_gestiones ccs');
				$row_g = $detalle_g->result_array();
				array_push($detalle_gestion, array("gestion"=>$rg, "detalle"=>$row_g));
			}

			array_push($gestiones_vendedores, array("vendedor"=>$rv, "asignacion"=>$g->num_rows(), "detalle"=>$detalle_gestion));

		}
		return $gestiones_vendedores;
	}

	function buscar_colegio_old($obj){

		$colegio = is_int($obj['colegio']);
		
		if($colegio){
			$this->db->where('RBD', $obj['colegio']);
			$query = $this->db->get('vista_cartera_full');

		}else{
			$this->db->like('NOMBRE', $obj['colegio']);
			$query = $this->db->get('vista_cartera_full');
		}

			
			return $query->result_array();
	}

	/*function ordenar_fechas(){
		$query = $this->db->get('gestiones_antiguas_master');
		$row = $query->result_array();
		$contador = 1;
		foreach($row as $r){
			#alterar fechas
			$fecha = $r['FECHA_GESTION'];
			$fecha = explode(' ', $fecha);
			$hora = $fecha[1];
			$fecha = explode('-',$fecha[0]);
			$fecha = $fecha[2].'-'.$fecha[1].'-'.$fecha[0];
			$fecha = $fecha.' '.$hora;
			$contador++;
			$datos = array("FECHA_GESTION"=>$fecha);
			$this->db->where('ID_GESTION',$r['ID_GESTION']);
			$this->db->update('gestiones_antiguas_master', $datos);
		}

		return $contador;

	}*/
}

 ?>